' Pictionary - Pi
' Version 1.8.0
' Copyright Â© 2020-2021 Nonki Takahashi.  The MIT License.
' Last update 2021-01-27

SB_Workaround()
Init()

' initialize chart shapes
Shapes_Init_Pi()
name = "Pi"
Sprite_Add()

' initialize caption shapes
Shapes_Init_Caption()
name = "Caption"
Sprite_Add()

Sub Init
  GraphicsWindow.Title = "Pictionary"
  gw = 598
  gh = 428
  GraphicsWindow.Width = gw
  GraphicsWindow.Height = gh
EndSub

Sub SB_RotateWorkaround
  ' Small Basic | rotate workaround for Silverlight
  ' param shp - current shape
  ' param x, y - original coordinate
  ' param _alpha - angle [radian]
  ' returns x, y - workaround coordinate
  If shp["func"] = "tri" Then
    x1 = -Math.Floor(shp["x3"] / 2)
    y1 = -Math.Floor(shp["y3"] / 2)
  ElseIf shp["func"] = "line" Then
    x1 = -Math.Floor(Math.Abs(shp["x1"] - shp["x2"]) / 2)
    y1 = -Math.Floor(Math.Abs(shp["y1"] - shp["y2"]) / 2)
  EndIf
  ox = x - x1
  oy = y - y1
  x = x1 * Math.Cos(_alpha) - y1 * Math.Sin(_alpha) + ox
  y = x1 * Math.Sin(_alpha) + y1 * Math.Cos(_alpha) + oy
EndSub

Sub SB_Workaround
  ' Small Basic | workaround for Silverlight / SBD
  ' return silverlight - "True" if in remote
  ' return sbd - "True" if Small Basic Desktop
  color = GraphicsWindow.GetPixel(0, 0)
  sbd = "False"
  If Text.GetLength(color) > 7 Then
    silverlight = "True"
    msWait = 300
  Else
    silverlight = "False"
    _gw = GraphicsWindow.Width
    _gh = GraphicsWindow.Height
    If (_gw = 624) And (_gh = 441) Then
      sbd = "True"
    EndIf
  EndIf
EndSub

Sub Shapes_CalcWidthAndHeight
  ' Shapes | calculate total width and height of shapes
  ' param shape[] - shape array
  ' return shWidth, shHeight - total size of shapes
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    If shp["func"] = "tri" Or shp["func"] = "line" Then
      xmin = shp["x1"]
      xmax = shp["x1"]
      ymin = shp["y1"]
      ymax = shp["y1"]
      If shp["x2"] < xmin Then
        xmin = shp["x2"]
      EndIf
      If xmax < shp["x2"] Then
        xmax = shp["x2"]
      EndIf
      If shp["y2"] < ymin Then
        ymin = shp["y2"]
      EndIf
      If ymax < shp["y2"] Then
        ymax = shp["y2"]
      EndIf
      If shp["func"] = "tri" Then
        If shp["x3"] < xmin Then
          xmin = shp["x3"]
        EndIf
        If xmax < shp["x3"] Then
          xmax = shp["x3"]
        EndIf
        If shp["y3"] < ymin Then
          ymin = shp["y3"]
        EndIf
        If ymax < shp["y3"] Then
          ymax = shp["y3"]
        EndIf
      EndIf
      shp["width"] = xmax - xmin
      shp["height"] = ymax - ymin
    EndIf
    If i = 1 Then
      shWidth = shp["x"] + shp["width"]
      shHeight = shp["y"] + shp["height"]
    Else
      If shWidth < shp["x"] + shp["width"] Then
        shWidth = shp["x"] + shp["width"]
      EndIf
      If shHeight < shp["y"] + shp["height"] Then
        shHeight = shp["y"] + shp["height"]
      EndIf
    EndIf
    shape[i] = shp
  EndFor
EndSub

Sub Shapes_Init_Caption
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 534 ' x offset
  shY = 358 ' y offset
  shape = ""
  shape[1] = "func=text;x=0;y=0;text=Pi;fn=Trebuchet MS;fs=50;fb=True;pw=0;bc=Black;"
EndSub

Sub Shapes_Init_Pi
  ' Shapes | Initialize shapes data
  ' return shX, shY - current position of shapes
  ' return shape - array of shapes
  shX = 97.76 ' x offset
  shY = 64 ' y offset
  shape = ""
  shape[1] = "func=line;x=-0.76;y=30;x1=0;y1=0;x2=404;y2=0;pw=4;pc=Gray;"
  shape[2] = "func=line;x=1.24;y=30;x1=0;y1=0;x2=0;y2=200;pw=4;pc=Gray;"
  shape[3] = "func=line;x=401.24;y=30;x1=0;y1=0;x2=0;y2=200;pw=4;pc=Gray;"
  shape[4] = "func=line;x=1.24;y=56.79;x1=0;y1=173.21;x2=99.99;y2=0.00;pw=4;pc=Gray;"
  shape[5] = "func=ell;x=99.23;y=54.79;width=4;height=4;pw=0;bc=Gray;"
  shape[6] = "func=line;x=101.23;y=56.79;x1=0.00;y1=0.00;x2=200.01;y2=0.00;pw=4;pc=Gray;"
  shape[7] = "func=ell;x=299.24;y=54.79;width=4;height=4;pw=0;bc=Gray;"
  shape[8] = "func=line;x=301.24;y=56.79;x1=0;y1=0.00;x2=100;y2=173.21;pw=4;pc=Gray;"
  shape[9] = "func=line;x=1.24;y=212.56;x1=0;y1=17.44;x2=0.76;y2=0.00;pw=4;pc=#CC0000;"
  shape[10] = "func=ell;x=0.00;y=210.56;width=4;height=4;pw=0;bc=#CC0000;"
  shape[11] = "func=line;x=2.00;y=195.27;x1=0.00;y1=17.29;x2=2.27;y2=0.00;pw=4;pc=#CC0000;"
  shape[12] = "func=ell;x=2.27;y=193.27;width=4;height=4;pw=0;bc=#CC0000;"
  shape[13] = "func=line;x=4.27;y=178.23;x1=0.00;y1=17.04;x2=3.78;y2=0.00;pw=4;pc=#CC0000;"
  shape[14] = "func=ell;x=6.05;y=176.23;width=4;height=4;pw=0;bc=#CC0000;"
  shape[15] = "func=line;x=8.05;y=161.59;x1=0.00;y1=16.64;x2=5.25;y2=0.00;pw=4;pc=#CC0000;"
  shape[16] = "func=ell;x=11.30;y=159.59;width=4;height=4;pw=0;bc=#CC0000;"
  shape[17] = "func=line;x=13.30;y=145.47;x1=0.00;y1=16.12;x2=6.67;y2=0.00;pw=4;pc=#CC0000;"
  shape[18] = "func=ell;x=17.97;y=143.47;width=4;height=4;pw=0;bc=#CC0000;"
  shape[19] = "func=line;x=19.97;y=130;x1=0.00;y1=15.47;x2=8.06;y2=0;pw=4;pc=#CC0000;"
  shape[20] = "func=ell;x=26.03;y=128;width=4;height=4;pw=0;bc=#CC0000;"
  shape[21] = "func=line;x=28.03;y=115.28;x1=0.00;y1=14.72;x2=9.37;y2=0.00;pw=4;pc=#CC0000;"
  shape[22] = "func=ell;x=35.40;y=113.28;width=4;height=4;pw=0;bc=#CC0000;"
  shape[23] = "func=line;x=37.40;y=101.44;x1=0.00;y1=13.84;x2=10.63;y2=0.00;pw=4;pc=#CC0000;"
  shape[24] = "func=ell;x=46.03;y=99.44;width=4;height=4;pw=0;bc=#CC0000;"
  shape[25] = "func=line;x=48.03;y=88.57;x1=0.00;y1=12.87;x2=11.78;y2=0.00;pw=4;pc=#CC0000;"
  shape[26] = "func=ell;x=57.81;y=86.57;width=4;height=4;pw=0;bc=#CC0000;"
  shape[27] = "func=line;x=59.81;y=76.79;x1=0.00;y1=11.78;x2=12.87;y2=0.00;pw=4;pc=#CC0000;"
  shape[28] = "func=ell;x=70.68;y=74.79;width=4;height=4;pw=0;bc=#CC0000;"
  shape[29] = "func=line;x=72.68;y=66.16;x1=0.00;y1=10.63;x2=13.84;y2=0.00;pw=4;pc=#CC0000;"
  shape[30] = "func=ell;x=84.52;y=64.16;width=4;height=4;pw=0;bc=#CC0000;"
  shape[31] = "func=line;x=86.52;y=56.79;x1=0.00;y1=9.37;x2=14.71;y2=0.00;pw=4;pc=#CC0000;"
  shape[32] = "func=ell;x=99.23;y=54.79;width=4;height=4;pw=0;bc=#CC0000;"
  shape[33] = "func=line;x=101.23;y=48.73;x1=0.00;y1=8.06;x2=15.48;y2=0.00;pw=4;pc=#CC0000;"
  shape[34] = "func=ell;x=114.71;y=46.73;width=4;height=4;pw=0;bc=#CC0000;"
  shape[35] = "func=line;x=116.71;y=42.06;x1=0.00;y1=6.67;x2=16.12;y2=0.00;pw=4;pc=#CC0000;"
  shape[36] = "func=ell;x=130.83;y=40.06;width=4;height=4;pw=0;bc=#CC0000;"
  shape[37] = "func=line;x=132.83;y=36.81;x1=0.00;y1=5.25;x2=16.64;y2=0.00;pw=4;pc=#CC0000;"
  shape[38] = "func=ell;x=147.47;y=34.81;width=4;height=4;pw=0;bc=#CC0000;"
  shape[39] = "func=line;x=149.47;y=33.03;x1=0.00;y1=3.78;x2=17.04;y2=0.00;pw=4;pc=#CC0000;"
  shape[40] = "func=ell;x=164.51;y=31.03;width=4;height=4;pw=0;bc=#CC0000;"
  shape[41] = "func=line;x=166.51;y=30.76;x1=0.00;y1=2.27;x2=17.29;y2=0.00;pw=4;pc=#CC0000;"
  shape[42] = "func=ell;x=181.80;y=28.76;width=4;height=4;pw=0;bc=#CC0000;"
  shape[43] = "func=line;x=183.80;y=30;x1=0.00;y1=0.76;x2=17.43;y2=0;pw=4;pc=#CC0000;"
  shape[44] = "func=ell;x=199.23;y=28;width=4;height=4;pw=0;bc=#CC0000;"
  shape[45] = "func=line;x=201.23;y=30;x1=0.00;y1=0;x2=17.44;y2=0.76;pw=4;pc=#CC0000;"
  shape[46] = "func=ell;x=216.67;y=28.76;width=4;height=4;pw=0;bc=#CC0000;"
  shape[47] = "func=line;x=218.67;y=30.76;x1=0.00;y1=0.00;x2=17.29;y2=2.27;pw=4;pc=#CC0000;"
  shape[48] = "func=ell;x=233.96;y=31.03;width=4;height=4;pw=0;bc=#CC0000;"
  shape[49] = "func=line;x=235.96;y=33.03;x1=0.00;y1=0.00;x2=17.04;y2=3.78;pw=4;pc=#CC0000;"
  shape[50] = "func=ell;x=251.00;y=34.81;width=4;height=4;pw=0;bc=#CC0000;"
  shape[51] = "func=line;x=253.00;y=36.81;x1=0.00;y1=0.00;x2=16.64;y2=5.25;pw=4;pc=#CC0000;"
  shape[52] = "func=ell;x=267.64;y=40.06;width=4;height=4;pw=0;bc=#CC0000;"
  shape[53] = "func=line;x=269.64;y=42.06;x1=0.0;y1=0.00;x2=16.12;y2=6.67;pw=4;pc=#CC0000;"
  shape[54] = "func=ell;x=283.76;y=46.73;width=4;height=4;pw=0;bc=#CC0000;"
  shape[55] = "func=line;x=285.76;y=48.73;x1=0.00;y1=0.00;x2=15.48;y2=8.06;pw=4;pc=#CC0000;"
  shape[56] = "func=ell;x=299.24;y=54.79;width=4;height=4;pw=0;bc=#CC0000;"
  shape[57] = "func=line;x=301.24;y=56.79;x1=0;y1=0.00;x2=14.71;y2=9.37;pw=4;pc=#CC0000;"
  shape[58] = "func=ell;x=313.95;y=64.16;width=4;height=4;pw=0;bc=#CC0000;"
  shape[59] = "func=line;x=315.95;y=66.16;x1=0.00;y1=0.00;x2=13.84;y2=10.63;pw=4;pc=#CC0000;"
  shape[60] = "func=ell;x=327.79;y=74.79;width=4;height=4;pw=0;bc=#CC0000;"
  shape[61] = "func=line;x=329.79;y=76.79;x1=0.00;y1=0.00;x2=12.87;y2=11.78;pw=4;pc=#CC0000;"
  shape[62] = "func=ell;x=340.66;y=86.57;width=4;height=4;pw=0;bc=#CC0000;"
  shape[63] = "func=line;x=342.66;y=88.57;x1=0.00;y1=0.00;x2=11.78;y2=12.87;pw=4;pc=#CC0000;"
  shape[64] = "func=ell;x=352.44;y=99.44;width=4;height=4;pw=0;bc=#CC0000;"
  shape[65] = "func=line;x=354.44;y=101.44;x1=0.0;y1=0.00;x2=10.63;y2=13.84;pw=4;pc=#CC0000;"
  shape[66] = "func=ell;x=363.07;y=113.28;width=4;height=4;pw=0;bc=#CC0000;"
  shape[67] = "func=line;x=365.07;y=115.28;x1=0.00;y1=0.00;x2=9.37;y2=14.72;pw=4;pc=#CC0000;"
  shape[68] = "func=ell;x=372.44;y=128;width=4;height=4;pw=0;bc=#CC0000;"
  shape[69] = "func=line;x=374.44;y=130;x1=0.0;y1=0;x2=8.06;y2=15.47;pw=4;pc=#CC0000;"
  shape[70] = "func=ell;x=380.50;y=143.47;width=4;height=4;pw=0;bc=#CC0000;"
  shape[71] = "func=line;x=382.50;y=145.47;x1=0.00;y1=0.00;x2=6.67;y2=16.12;pw=4;pc=#CC0000;"
  shape[72] = "func=ell;x=387.17;y=159.59;width=4;height=4;pw=0;bc=#CC0000;"
  shape[73] = "func=line;x=389.17;y=161.59;x1=0.00;y1=0.00;x2=5.25;y2=16.64;pw=4;pc=#CC0000;"
  shape[74] = "func=ell;x=392.42;y=176.23;width=4;height=4;pw=0;bc=#CC0000;"
  shape[75] = "func=line;x=394.42;y=178.23;x1=0.00;y1=0.00;x2=3.78;y2=17.04;pw=4;pc=#CC0000;"
  shape[76] = "func=ell;x=396.20;y=193.27;width=4;height=4;pw=0;bc=#CC0000;"
  shape[77] = "func=line;x=398.20;y=195.27;x1=0.00;y1=0.00;x2=2.27;y2=17.29;pw=4;pc=#CC0000;"
  shape[78] = "func=ell;x=398.47;y=210.56;width=4;height=4;pw=0;bc=#CC0000;"
  shape[79] = "func=line;x=400.47;y=212.56;x1=0.00;y1=0.00;x2=0.77;y2=17.44;pw=4;pc=#CC0000;"
  shape[80] = "func=text;x=1.24;y=0;text=4;fn=Trebuchet MS;fs=20;fb=False;fi=False;pw=4;pc=#CC0000;bc=Gray;"
  shape[81] = "func=text;x=61.24;y=140;text=3;fn=Trebuchet MS;fs=20;fb=False;fi=False;pw=4;pc=#CC0000;bc=Gray;"
  shape[82] = "func=text;x=31.24;y=70;text=Ï;fn=Trebuchet MS;fs=20;fb=False;fi=False;pw=4;pc=#CC0000;bc=#CC0000;"
EndSub

Sub Sprite_Add
  ' Sprite | add shapes to a sprite
  ' param name - sprite name
  ' param shX, shY - origin of shape array
  ' param scale - to resize 
  ' param shape[] - shape array
  ' param nSprite - number of sprite
  ' return nSprite - updated number of sprite
  ' return sprite[] - sprite array
  Stack.PushValue("local", i)
  Stack.PushValue("local", x)
  Stack.PushValue("local", y)
  nSprite = nSprite + 1
  spr = ""
  spr["name"] = name
  spr["x"] = shX
  spr["y"] = shY
  spr["angle"] = 0
  spr["dir"] = 1
  Shapes_CalcWidthAndHeight()
  spr["width"] = shWidth
  spr["height"] = shHeight
  spr["cx"] = shWidth / 2
  spr["cy"] = shHeight / 2
  If scale = "" Then
    scale = 1
  EndIf
  s = scale
  spr["scale"] = s
  For i = 1 To Array.GetItemCount(shape)
    shp = shape[i]
    GraphicsWindow.PenWidth = shp["pw"] * s
    If shp["pw"] > 0 Then
      GraphicsWindow.PenColor = shp["pc"]
    EndIf
    If Text.IsSubText("rect|ell|tri|text|btn", shp["func"]) Then
      GraphicsWindow.BrushColor = shp["bc"]
    EndIf
    If Text.IsSubText("text|btn", shp["func"]) Then
      If silverlight Then
        fs = Math.Floor(shp["fs"] * 0.9)
      Else
        fs = shp["fs"]
      EndIf
      GraphicsWindow.FontSize = fs * s
      GraphicsWindow.FontName = shp["fn"]
      If shp["fb"] = "False" Then
        GraphicsWindow.FontBold = "False"
      Else
        GraphicsWindow.FontBold = "True"
      EndIf
    EndIf
    If shp["func"] = "rect" Then
      shp["obj"] = Shapes.AddRectangle(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "ell" Then
      shp["obj"] = Shapes.AddEllipse(shp["width"] * s, shp["height"] * s)
    ElseIf shp["func"] = "tri" Then
      shp["obj"] = Shapes.AddTriangle(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s, shp["x3"] * s, shp["y3"] * s)
    ElseIf shp["func"] = "line" Then
      shp["obj"] = Shapes.AddLine(shp["x1"] * s, shp["y1"] * s, shp["x2"] * s, shp["y2"] * s)
    ElseIf shp["func"] = "text" Then
      shp["obj"] = Shapes.AddText(shp["text"])
    EndIf
    x = shp["x"]
    y = shp["y"]
    shp["rx"] = x
    shp["ry"] = y
    If sbd And (shp["func"] = "line") Then
      shp["wx"] = x
      shp["wy"] = y
    ElseIf silverlight And Text.IsSubText("tri|line", shp["func"]) Then
      _alpha = Math.GetRadians(shp["angle"])
      SB_RotateWorkaround()
      shp["wx"] = x
      shp["wy"] = y
    EndIf
    If shp["func"] = "btn" Then
      shp["obj"] = Controls.AddButton(shp["caption"], shX + x * s, shY + y * s)
    Else
      Shapes.Move(shp["obj"], shX + x * s, shY + y * s)
    EndIf
    If Text.IsSubText("rect|ell|tri|text", shp["func"]) And (shp["angle"] <> 0) And (shp["angle"] <> "") Then
      Shapes.Rotate(shp["obj"], shp["angle"])
    EndIf
    shape[i] = shp
  EndFor
  spr["shape"] = shape
  sprite[nSprite] = spr
  y = Stack.PopValue("local")
  x = Stack.PopValue("local")
  i = Stack.PopValue("local")
EndSub
